<?php

/**
 *
 *  @file
 *  Empty Page module
 *  A simple empty page solution. Assists in creating empty menu callbacks, mostly used for pages that only consist of blocks..
 *
 */

define('EMPTY_PAGE_PERM_ADMINISTER', 'administer empty page');
define('EMPTY_PAGE_PERM_MANAGE_CALLBACKS', 'manage empty page callbacks');


/**
 *  Implementation of hook_perm().
 */
function empty_page_perm() {
  $perms = array(
    EMPTY_PAGE_PERM_MANAGE_CALLBACKS,
  );
  // TODO: Handle user added permissions.
  //$perms += empty_page_get_custom_perms();
  return $perms;
}


/**
 *  Implementation of hook_menu().
 */
function empty_page_menu() {
  $items = array();
  
  $items['admin/settings/empty-page'] = array(
    'title' => 'Empty Page',
    'description' => 'Administer Empty Page configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_settings_form'),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'file' => 'empty_page.admin.inc',
  );
  
  $items['admin/build/empty-page'] = array(
    'title' => 'Empty Page callbacks',
    'description' => '',
    'page callback' => 'empty_page_admin_overview',
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'file' => 'empty_page.admin.inc',
  );
  
  $items['admin/build/empty-page/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  
  $items['admin/build/empty-page/add'] = array(
    'title' => 'Add Callback',
    'description' => 'Create an empty page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_callbacks_form'),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_LOCAL_TASK,
    'file' => 'empty_page.admin.inc',
    'weight' => 1,
  );
  
  $items['admin/build/empty-page/%/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_callbacks_form', 3),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_CALLBACK,
    'file' => 'empty_page.admin.inc',
  );
  
  $items['admin/build/empty-page/%/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_admin_delete_form', 3),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_CALLBACK,
    'file' => 'empty_page.admin.inc',
  );
  
  // Create the dynamic callbacks.
  foreach (empty_page_get_callbacks() as $cid => $callback) {
    $items[$callback->path] = array(
      'title' => t($callback->page_title),
      'page callback' => 'empty_page_empty',
      // TODO: For now, just use 'access content'. Add ability to re-use existing perms or add new ones.
      'access arguments' => array('access content'),
      // TODO: How should the type be handled? Maybe let user choose?
      'type' => MENU_SUGGESTED_ITEM,
    );
  }
  
  return $items;
}


function empty_page_theme(&$existing, $type, $theme, $path) {
  $hooks = array();
  $hooks['empty_page_callbacks_manage_render'] = array();
  return $hooks;
}


function empty_page_get_custom_perms() {
  // TODO: Handle user added permissions.
  //$callbacks = empty_page_get_callbacks();
  return array();
}


function empty_page_empty() {
  return '';
}


function theme_empty_page_callbacks_manage_render() {
  
  $callbacks = empty_page_get_callbacks();
  //drupal_set_message('<pre>'. print_r($callbacks, 1) .'</pre>');
  $edit_access = user_access(EMPTY_PAGE_PERM_MANAGE_CALLBACKS);
  
  $rows = array();
  foreach ($callbacks as $cid => $callback) {
    $rows[$cid][] = '<strong>'. $callback->path .'</strong>';
    $rows[$cid][] = l(t('View'), $callback->path);
    if ($edit_access) {
      $rows[$cid][] = l(t('Edit'), 'admin/build/empty-page/'. $callback->cid .'/edit');
      $rows[$cid][] = l(t('Delete'), 'admin/build/empty-page/'. $callback->cid .'/delete');
    }
  }
  
  $header = array();
  if ($edit_access) {
    $header = array(t('Internal Path'));
  }
  
  $admin_add = t('<a href="!url">Add one now!</a>', array('!url' => url('admin/build/empty-page/add')));
  
  if (count($callbacks)) {
    $output = theme('table', $header, $rows);
  }
  else {
    $output = '<p style="padding:10px 0;margin:0;">'. t('No callbacks exist yet.') . ($edit_access ? ' '. $admin_add : '') .'</p>';
  }
  
  return $output;
}


/**
 * API
 */


function empty_page_get_callbacks() {
  $callbacks = array();
  $result = db_query("SELECT * FROM {empty_page} ep ORDER BY ep.changed");
  while ($callback = db_fetch_object($result)) {
    $callbacks[$callback->cid] = $callback;
  }
  return $callbacks;
}


function empty_page_get_callback($cid) {
  $callback = db_fetch_object(db_query("SELECT * FROM {empty_page} ep WHERE ep.cid = %d ORDER BY ep.changed", $cid));
  return $callback;
}


function empty_page_save_callback($callback) {
  if ($callback->cid) {
    $result = db_query("UPDATE {empty_page} SET path = '%s', page_title = '%s', changed = %d WHERE cid = %d", array($callback->path, $callback->page_title, time(), $callback->cid));
    $ret = $callback->cid;
  }
  else {
    $result = db_query("INSERT INTO {empty_page} SET path = '%s', page_title = '%s',  created = %d, changed = %d", array($callback->path, $callback->page_title, time(), time()));
    $ret = db_last_insert_id('empty_page', 'cid');
  }
  return $ret;
}


function empty_page_delete_callback($cid) {
  if (is_numeric($cid)) {
    return db_query("DELETE FROM {empty_page} WHERE cid = %d", $cid);
  }
}


function empty_page_clear_menu_cache() {
  // Clear menu cache.
  menu_router_build(TRUE);
  menu_cache_clear_all();
}

